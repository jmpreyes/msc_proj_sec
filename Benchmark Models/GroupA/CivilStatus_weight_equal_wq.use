model CivilStatus

enum Gender {male, female}
enum CivilStatus {single, married, divorced, widowed}

@Rank = 3
class Person
attributes
	name : Integer
	gender : Gender
	civstat : CivilStatus
operations
	spouse() : Person
end

@Rank = 3
association Marriage between
	Person [0..1] role husband
	Person [0..1] role wife
end

constraints

@PaperRank{Rank = 3}
context Person
inv: Person.allInstances()->forAll(p1,p2:Person|p1<>p2 implies p1.name <> p2.name)
inv: Person.allInstances()->forAll(p|p.gender=#male implies p.husband->isEmpty())
inv: Person.allInstances()->forAll(p|p.gender=#female implies p.wife->isEmpty())

module QueryA1
	select Person.* as q0
	select *.* with Person::* as q1
	select Person.gender with Person::* as q2
	select only Person but Person::* as q3
	select only Person with Person::*@3 as q4
	select Person with Person::*@3 as q5
	select only Person with Person::* but Person::inv2 as q6
	select Person:Marriage:* as q7
	select Person with Person::* 
		inject {Person.allInstances()->forAll(p|p.civstat->isEmpty() implies p.civstat=#single)} as q8
	select Person.* with Person::* 
		inject {Person.allInstances()->forAll(p|p.civstat->isEmpty() implies p.civstat=#single)} as q9
end
