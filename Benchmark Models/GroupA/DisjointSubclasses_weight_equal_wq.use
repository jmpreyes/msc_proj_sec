model DisjointSubclasses

@Rank=1
class A
end

@Rank=1
class B < A
end

@Rank=1
class C < A
end

@Rank=1
class D < B, C
end

constraints

context B
	@Rank=1
	inv: B.allInstances()->forAll(b|C.allInstances()->forAll(c|b<>c))

module QueryA3
	select A, B, C, D as q0
	select A, B, C, D with A::*, B::*, C::*, D::* as q1
	select only B with B::* as q2
	select only A inject {A.allInstances()->isEmpty()@1} as q3
	select *@1 as q4
	select *@1 but B as q5
	select B@1 with B::*@1 as q6
	select only C, D with B::* as q7
	select C inject {C.allInstances()->forAll(c|B.allInstances()->forAll(b|b<>c))@1} as q8
	select q4 & select q5 as q9
end
