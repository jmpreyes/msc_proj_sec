model CivilStatus

enum Gender {male, female}
enum CivilStatus {single, married, divorced, widowed}

@Rank = automatic
class Person
attributes
	name : Integer
	gender : Gender
	civstat : CivilStatus
operations
	spouse() : Person
end

@Rank = 5
association Marriage between
	Person [0..1] role husband
	Person [0..1] role wife
end

constraints

@PaperRank{Rank = automatic}
context Person
inv: Person.allInstances()->forAll(p1,p2:Person|p1<>p2 implies p1.name <> p2.name)
inv: Person.allInstances()->forAll(p|p.gender=#male implies p.husband->isEmpty())
@Rank = 7
inv: Person.allInstances()->forAll(p|p.gender=#female implies p.wife->isEmpty())

module QueryA2
	select Person.* with Person::*@7 as q0
	select Person.* with Person::inv3 as q1
	select Person.*, Person:Marriage:* with Person::inv1 as q2
	select Person.gender, Person:Marriage:* with Person::inv1 as q3
	select Person.* with Person::* but Person::inv2 as q4
	select Person.*, Person:*:* with Person::* but Person::inv3 as q5
	select only Person with Person::inv1 as q6
	select Person.* with Person::* but Person::inv3 
		inject {Person.allInstances()->forAll(p|p.civstat->isEmpty() implies p.civstat=#single)@10} as q7
	select no Person as q8
	select Person.* but Person::* as q9
end
