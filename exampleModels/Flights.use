model Flights

enum Seating {Economy, Business, FirstClass}

class Person
attributes
	name: String
	seat: Seating
end

class Flight
attributes
	flightNo: Integer
	departTime: String
	destination: String
operations
	getAvailableSeats(): Integer
end

class Airplane
attributes
	totalSeats: Integer
	aircraftType: String
operations
	getTotalSeats(): Integer
end

association HasFlight between
	Person [0..*] role passengers
	Flight [0..*] role flights
end

association HasAirplane between
	Flight [0..*] role flights
	Airplane [1..1] role plane
end

constraints

context Person
	inv: Person.allInstances()->forAll(p|p.seat = #Economy 
		or p.seat = #Business or p.seat = #FirstClass)
	inv: Person.allInstances()->forAll(p|p.name.size() > 0)
	inv: Person.allInstances()->forAll(p1,p2|p1.name <> p2.name)

context Flight
	inv: self.flightNo > 0
	inv: Flight.allInstances()->forAll(f1,f2|f1.flightNo <> f2.flightNo)

context Airplane
	inv: self.totalSeats > 0

